apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "semaphore.fullname" . }}
  labels:
    {{- include "semaphore.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "semaphore.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "semaphore.selectorLabels" . | nindent 8 }}
    spec:
      containers:              
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:#
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: SEMAPHORE_DB_DIALECT
              value: {{ .Values.env.SEMAPHORE_DB_DIALECT }}
            - name: SEMAPHORE_DB
              value: {{ .Values.env.SEMAPHORE_DB }}
            - name: SEMAPHORE_DB_USER
              value: {{ .Values.env.SEMAPHORE_DB_USER }}
            - name: SEMAPHORE_DB_PASS
              value: {{ .Values.env.SEMAPHORE_DB_PASS }}
            - name: SEMAPHORE_DB_HOST
              value: {{ .Values.env.SEMAPHORE_DB_HOST }}
            - name: SEMAPHORE_DB_PORT
              value: {{ .Values.env.SEMAPHORE_DB_PORT | quote }}
            - name: SEMAPHORE_PLAYBOOK_PATH
              value: {{ .Values.env.SEMAPHORE_PLAYBOOK_PATH }}
            - name: SEMAPHORE_ADMIN_PASSWORD
              value: {{ .Values.env.SEMAPHORE_ADMIN_PASSWORD }}
            - name: SEMAPHORE_ADMIN_EMAIL
              value: {{ .Values.env.SEMAPHORE_ADMIN_EMAIL }}
            - name: SEMAPHORE_ADMIN_NAME
              value: {{ .Values.env.SEMAPHORE_ADMIN_NAME }}
            - name: SEMAPHORE_ADMIN
              value: {{ .Values.env.SEMAPHORE_ADMIN }}
            - name: SEMAPHORE_ACCESS_KEY_ENCRYPTION
              value: {{ .Values.env.SEMAPHORE_ACCESS_KEY_ENCRYPTION }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 5
            httpGet:
              port: 3000
          readinessProbe:
            initialDelaySeconds: 5
            httpGet:
              port: 3000
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: {{ .Values.volume.name }}
              mountPath: {{ .Values.volume.mountPath }}
      volumes:
        - name: {{ .Values.volume.name }}
          {{- if .Values.volume.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.volume.claimName }}        
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}


